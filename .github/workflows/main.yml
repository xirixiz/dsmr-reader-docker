name: 'build multi arch images for DSMR Reader'

on:
  push:
    branches:
      - 's6_init'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**.md'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # DOCKER_BUILDKIT: 1
      # DOCKER_CLI_EXPERIMENTAL: enabled
      docker_base_image: python:3-alpine3.13
      docker_target_repo: xirixiz/dsmr-reader-docker
      build_image_name: local/alpine-base
      dockerfile: Dockerfile
      dsmr_version: 4.19.0
      qemu_version: 5.2.0-2
      s6_version: 2.2.0.3
    strategy:
      matrix:
        include:
          # amd64 builds (Alpine)
          - base_image: amd64/${docker_base_image}
            build_image: ${build_image_name}:amd64
            qemu_arch: x86_64
            s6_arch: amd64
            docker_tag_suffix: amd64

          # arm32v6 builds (Alpine)
          - base_image: arm32v6/${docker_base_image}
            build_image: ${build_image_name}:arm
            qemu_arch: arm
            s6_arch: armhf
            docker_tag_suffix: arm32v6

    steps:
    - name: '‚õ¥Ô∏è Login to DockerHub'
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: 'üß∞ Checkout GitHub repository'
      uses: actions/checkout@v2

    - name: 'Setup QEMU'
      run: |
        docker run --rm --privileged multiarch/qemu-user-static:register --reset
        mkdir -p tmp/qemu-${{ matrix.qemu_arch }}
        curl -k -L -s "https://github.com/multiarch/qemu-user-static/releases/download/v${qemu_version}/qemu-${{ matrix.qemu_arch }}-static.tar.gz" | tar xvzf - -C tmp/qemu-${{ matrix.qemu_arch }}
        cp tmp/qemu-${{ matrix.qemu_arch }}/qemu-${{ matrix.qemu_arch }}-static ../../qemu/

    - name: 'Setup S6'
      run: |
        mkdir -p tmp/s6-${{ matrix.s6_arch }}
        curl -k -L -s "https://github.com/just-containers/s6-overlay/releases/download/v${s6_version}/s6-overlay-${{ matrix.s6_arch }}.tar.gz" | tar xvzf - -C tmp/s6-${{ matrix.s6_arch }}

    - name: 'Build QEMU'
      run: |
        docker build --build-arg ARCH=${{ matrix.qemu_arch }} \
          --build-arg BASE=${{ matrix.base_image }} \
          -t ${{ matrix.build_image }} qemu

    # - name: Determine version
    #   id: s6-overlay
    #   shell: bash
    #   run: |
    #     URL='https://api.github.com/repos/just-containers/s6-overlay/releases'
    #     URL="$URL/latest"
    #     VERSION=$(curl -sSf $URL | jq -r .tag_name)
    #     VERSION=${VERSION#"v"}
    #     echo "::set-output name=version::$VERSION"



    # - name: 'üöÄ Push'
    # - name: 'üöß Run job'
    # - name: '‚öôÔ∏è Setup qus'
    # - name: '‚õ¥Ô∏è Login to docker.io'
    # - name: 'üõ∞Ô∏è Update manifests'
